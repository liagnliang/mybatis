<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace命名空间-->
<mapper namespace="mybatis.mapper.UserMapper">
    <!-- 在映射文件中配置sql语句-->
    <!-- 需求：通过id查询用户表的记录-->
    <!-- id：statement的id
         #{}：标识一个占位符
         #{id}：其中的id表示接收的输入参数，参数名称就是id，如果输入参数时简单类型，#{}中的参数名可任意，
         可以是value或其他名称
         parameterType：指定输入参数的类型
         resultType：指定sql输出结果所映射的java对象类型
    -->
    <select id="findUserById" parameterType="int" resultType="mybatis.po.User">
        SELECT * FROM `user` WHERE id=#{id}
    </select>

    <!--需求：根据用户名称模糊查询用户信息-->
    <!--${}:表示拼接sql串，将接收到参数的内容不加任何修饰拼接在sql中，使用${}拼接sql，会引起sql注入
     ${value}:接收输入参数的内容，如果传入类型是简单类型，${}中只能使用value
     resultType：指定的及时单条记录所映射的java对象类型
    -->
    <select id="findUserByName" parameterType="java.lang.String" resultType="mybatis.po.User">
        SELECT * FROM `user` WHERE username like "%"#{name}"%"
    </select>

    <!--添加用户-->
    <!--parameterType:指定输入参数类型是pojo
        #{}中指定pojo的属性名，接收到pojo对象的属性值，mybatis通过OGNL获取对象的属性值
    -->
    <insert id="insertUser" parameterType="mybatis.po.User">
        <!--获取自增主键
            将插入数据的主键返回，返回到user对象中
            SELECT LAST_INSERT_ID(): 得到insert进去的记录的主键值，只试用与自增主键
            keyProperty：将查询到的parameterType指定的对象的那个属性
            order：指定执行属性
        -->
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into user (id,username,birthday,sex,address) value (#{id},#{username},#{birthday},#{sex},#{address})
    </insert>

    <!--删除用户-->
    <delete id="deleteUserById" parameterType="java.lang.Integer">
        delete from user where id=#{id}
    </delete>

    <!--更新用户-->
    <update id="updateUser" parameterType="mybatis.po.User">
        update user set username=#{username},birthday=#{birthday},sex=#{sex},address=#{address} where id=#{id}
    </update>
</mapper>